---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Lucas.
--- DateTime: 09/02/2021 14:52
---

local punishments = {}
Tunnel.bindInterface("Punishments",punishments)

punishments.applyPunish = function(data)
    local src = source
    local user = vRP.getUserId(src)

    if vRP.hasPermission(user,"smash-ac.bypass") then
       return;
    end

    sendToDiscord(data)

    if data["requireScreenshoot"] then
        Citizen.Wait(1000)
    end

    if data["punishment"] == "Ban" then
        vRP.setBanned(parseInt(user),true)
        vRP.kick(src,"\n\n[Smash-AC] Você foi banido permanentemente por descumprir termos administrativos.\nPara mais informações consulte nosso discord.\nAcha que seu banimento foi um erro? Abra um ticket e aguarde o retorno da administração.")
    elseif data["punishment"] == "Kick" then
        vRP.kick(src,"\n\n[Smash-AC] Você foi removido do servidor por descumprir termos administrativos.\nPara mais informações consulte um moderador.")
    end
end

punishments.stopResource = function(resourceName)
    local src = source
    local user = vRP.getUserId(src)
    if src == nil then 
        return; 
    end
    TraceMsg(resourceName..' desligado pelo lado do cliente por: #'..parseInt(user),true);
    punishments.applyPunish({ reason = 'A resource '..tostring(resourceName)..' foi desligada.', punishment = 'Log', requireScreenshoot = false });
end

punishments.tryAdmin = function()
    local src = source
    local user = vRP.getUserId(src)
    return vRP.hasPermission(user,'Owner');
end